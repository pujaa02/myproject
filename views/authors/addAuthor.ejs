<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="/sweetalert2/sweetalert2.min.css">
  <script src="/sweetalert2/sweetalert2.min.js"></script>
  <style>
 
    .error_message{
      color:red;
      margin-bottom: 10px;
    }
 
  </style>
</head>
<body>
  <%-include ('../admin/adminSidebar',{search : 0}) %>
  <div class="table1 overflow-auto">
    <h2 class="text-center">Add Author</h2>
        <div id="success"></div>
    <form  method="post" enctype="multipart/form-data"  id="my-form">
      <div class="form-row">
        <div class="form-group col-md">
          <label for="authorname">Name</label>
          <input type="text" class="form-control" name="author_name" id="authorname" placeholder="name">
          <span id="authorname_error" class="error_message"></span>
        </div>
        <div class="form-group col-md">
          <label for="description">Description</label>
          <textarea class="form-control" name="author_desc" id="description" placeholder="description"></textarea>
          <span id="description_error" class="error_message"></span>
        </div>
      </div>
      
      <div class="form-group col-md" >
        <label for="imageauthor">Image</label>
        <input type="file" name="image" class="form-control" id="imageauthor" value="" accept="image/*" onchange="previewImage(event)">
        <span id="imageauthor_error" class="error_message"></span>
      </div>
      <div id="">
        <img id="ImagePreview" src="#"  style="max-width: 100px;max-height: 100px;">
      </div>
  
   <input type="button" class="btn btn-primary mt-3" value="Add" onclick="validateForm()"></input>
    </form>
  </div>
  </div>
  </div>
  <script>
function previewImage(event){
  const input=event.target;
  const ImagePreview=document.getElementById("ImagePreview");
  if(input.files && input.files[0]){
    const reader=new FileReader();
    reader.onload=function (e){
      ImagePreview.src=e.target.result;
    }
    reader.readAsDataURL(input.files[0]);
  }
}

function validateForm(){
let authorname=document.getElementById("authorname");
let description=document.getElementById("description");
let imageauthor=document.getElementById("imageauthor");
let fields=[authorname,description,imageauthor];
let errorMessages=["author name is required","description is required","please upload author image"];
let isValid=true;
for(let i=0;i<fields.length;i++){
    let errorElement=document.getElementById(fields[i].id+"_error");
  
    if(!fields[i].value.trim()){
      errorElement.textContent=errorMessages[i];
      isValid=false;
    }
    else{
      errorElement.textContent=""
    }
   }

let desc=description.value.trim();
 if(desc!=""&& (desc.length<50 || desc.length>250)){
    document.getElementById("description_error").textContent="description must be between 50 and 250 characters"
    return false;
}
if(imageauthor.value!="" && (imageauthor.files[0] && imageauthor.files[0].size>20000)){
  imageauthor.classList.add("error");
  document.getElementById("imageauthor_error").textContent="author image size must be less than 20000 bytes "
 isValid=false;
}
if(isValid===true){
  addAuthor()
}
   return isValid;

}

async function addAuthor(){
const form=document.getElementById("my-form")
const formData =new FormData(form);
const params=new URLSearchParams(formData)
const response=  await fetch('/admin/createAuthor', {
               method: 'POST',
               'Content-Type':"application/json",
               body: formData,
           });
let data=await response.json();

if(data.message==="success"){

  Swal.fire({
      title: "create author!",
      text: "author create succesfully",
      icon: "success"
    }).then((result)=>{
      if(result.isConfirmed){
        
       window.location.href = `/admin/createAuthor`
      }
    });
}

if(data.message==="error"){
          Swal.fire({
      title: "error!",
      text: "error while creating author.",
      icon: "error"
    }).then((result)=>{
      if(result.isConfirmed){
        for(let i=0;i<data.errors.length;i++){
          let errorele=data.errors[i].path+"_error";
        
          document.getElementById(errorele).textContent=data.errors[i].msg;
         }
      }
    });

        }

       } 

  </script>
  </body>

</html>

